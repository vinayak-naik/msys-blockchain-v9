// SPDX-License-Identifier: MIT
    pragma solidity ^0.8.0;

// =================================== CONTRACT ================================================

    contract gameContract {

// ================================= CONSTRUCTOR ==============================================

        constructor(){
            admin=msg.sender;
        }

// =================================== STRUCTS =================================================

         struct Game{
            uint id;
            string name;
            string route;
            string externalUrl;
            bool active;
            bool visibility;
            bool exists;
        }
         
// =================================== VARIABLES ================================================

        Game[] public games;
        address public admin;

////////////////////////////////////////MODIFIERS////////////////////////////////////////////////

// =================================== ONLY ADMIN ================================================

        modifier onlyAdmin{
            require(msg.sender == admin,"Only admin can call this function");
            _;
        }

// ================================== VALID GAME ===============================================

        function validGame(uint gameId) private view{
            require(games[gameId].exists,"Invalid gameId");
        }

// ================================ UPDATE-GAME-ADMIN ================================================

        function updateGameAdmin(address _address) public onlyAdmin returns (bool) {
                admin=_address;
                return true;
        }
// ==================================  ADD GAME =================================================

        function addGame(string memory name,string memory route,string memory externalUrl) public onlyAdmin returns(bool){
            games.push(Game(games.length, name, route,externalUrl, true, true, true));
            return true;
        }

// ==================================  ADD GAME =================================================

        function updateGame(uint gameId, string memory name,string memory route,string memory externalUrl, bool active, bool visibility) public onlyAdmin returns(bool){
            games[gameId].name=name;
            games[gameId].route=route;
            games[gameId].externalUrl=externalUrl;
            games[gameId].active=active;
            games[gameId].visibility=visibility;
            return true;
        }

// ================================ DELETE GAME ====================================================

        function deleteGame(uint gameId) public onlyAdmin returns (bool) {
                delete games[gameId];
                return true;
        }

// ================================ DELETE ALL GAMES ================================================

        function removeAllGames() public onlyAdmin returns (bool) {
                delete games;
                return true;
        }

// ================================= GET GAME ==============================================

        function getGame(uint gameId) public view returns (Game memory) {
            return games[gameId];
        }

// ================================= GET ALL GAMES ==============================================

        function getAllGames() public view returns (Game[] memory) {
            return games;
        }
    }